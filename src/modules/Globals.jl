const MAX_CONTRACTION = 12
export MAX_CONTRACTION

#                        | s | p |    d     |    f    |
#                        ------------------------------ 
const axial_norm_fact = Matrix{Float64}(
                          [ 1.0 1.0    1.0        1.0   ; 
                            0.0 1.0 sqrt(3.0)  sqrt(5.0);
                            0.0 1.0 sqrt(3.0)  sqrt(5.0);
                            0.0 0.0    1.0     sqrt(5.0);
                            0.0 0.0 sqrt(3.0) sqrt(15.0);
                            0.0 0.0    1.0     sqrt(5.0);
                            0.0 0.0    0.0        1.0   ;
                            0.0 0.0    0.0     sqrt(5.0);
                            0.0 0.0    0.0     sqrt(5.0);
                            0.0 0.0    0.0        1.0
                          ]
                        )

const s_normalization_factors = [1.0]
const p_normalization_factors = [1.0, 1.0, 1.0]
const d_normalization_factors = [1.0, 1.7320508075688774, 1.7320508075688774, 1.0, 1.7320508075688774, 1.0]
const f_normalization_factors = [1.0, 2.23606797749978981, 2.23606797749978981, 1.0, 
                           2.23606797749978981, 3.87298334620741702, 2.23606797749978981, 
                           2.23606797749978981, 2.23606797749978981, 1.0]

const g_normalization_factors = [ 1.00000000000000000, 2.64575131106459072, 2.64575131106459072, 
                            3.41565025531986599, 5.91607978309961613, 3.41565025531986599, 
                            2.64575131106459072, 5.91607978309961613, 5.91607978309961613, 
                            2.64575131106459072, 1.00000000000000000, 2.64575131106459072, 
                            3.41565025531986599, 2.64575131106459072, 1.00000000000000000]

function get_axial_normalization_factor(index,angular_momentum)
  if angular_momentum == 1 
    return s_normalization_factors[index]
  elseif angular_momentum == 2
    return p_normalization_factors[index]
  elseif angular_momentum == 3
    return d_normalization_factors[index]

  elseif angular_momentum == 4
    return f_normalization_factors[index]
  elseif angular_momentum == 5
    return g_normalization_factors[index]
  end
  error("no normalization factor found")
end

export s_normalization_factors, p_normalization_factors, d_normalization_factors, f_normalization_factors, g_normalization_factors
export get_axial_normalization_factor
export axial_norm_fact



#==
constexpr double h_corr_norm_fact[20] = {1.0, // s
     1.0, 1.0, 1.0, // p
     //1.0, 1.0, 1.0, 0.57735026918962576, 0.57735026918962576, 0.57735026918962576, // d( xx,yy,zz,xy,zz,yz)
     1.0, 1.0, 1.0, 1.7320508075688774, 1.7320508075688774, 1.7320508075688774, // d( xx,yy,zz,xy,xz,yz) 1/norm gamess ordering
     1.0, 1.0, 1.0, 2.23606797749978970,2.23606797749978970,2.23606797749978970,2.23606797749978970,
     2.23606797749978970,2.23606797749978970,3.87298334620741689 // f(xxx, xxy, xyy, yyy, xxz, xyz, yyz, xzz, yzz, zzz)
     // gamess f(xxx, yyy, zzz, xxy, xxz, xyy, xxz,xyy, yyz, xzz, yzz, xyz
     //  g, h shells next
    };

 constexpr double h_corr_norm_fact[84] = {
     // s 
     1.0,
     // p 
     1.0, 1.0, 1.0, 
     // d( xx, xy, xz, yy, yz, zz)
     1.0, 1.7320508075688774, 1.7320508075688774, 1.0, 1.7320508075688774, 1.0, 
     // f(xxx, xxy, xyy, yyy, xxz, xyz, yyz, xzz, yzz, zzz)
     1.0, 2.23606797749978981, 2.23606797749978981, 1.0, 2.23606797749978981, 3.87298334620741702,
     2.23606797749978981, 2.23606797749978981, 2.23606797749978981, 1.0, 
     // g(xxxx, xxxy, xxxz, xxyy, xxyz, xxzz, xyyy, xyyz, xyzz, xzzz, yyyy, yyyz, yyzz, yzzz, zzzz)
     1.00000000000000000, 2.64575131106459072, 2.64575131106459072, 
     3.41565025531986599, 5.91607978309961613, 3.41565025531986599, 
     2.64575131106459072, 5.91607978309961613, 5.91607978309961613, 
     2.64575131106459072, 1.00000000000000000, 2.64575131106459072, 
     3.41565025531986599, 2.64575131106459072, 1.00000000000000000,
		 // h {{5, 0, 0}, {4, 1, 0}, {4, 0, 1}, {3, 2, 0}, {3, 1, 1}, {3, 0, 2}, {2,3, 0},
     //{2, 2, 1}, {2, 1, 2}, {2, 0, 3}, {1, 4, 0}, {1, 3, 1}, {1,2, 2}, {1, 1, 3},
     //{1, 0, 4}, {0, 5, 0}, {0, 4, 1}, {0, 3, 2}, {0, 2, 3}, {0, 1, 4}, {0, 0, 5}}
     1.00000000000000000, 3.00000000000000000, 3.00000000000000000,
		 4.58257569495584001, 7.93725393319377177, 4.58257569495584001,
		 4.58257569495584001, 10.2469507659595984, 10.2469507659595984,
		 4.58257569495584001, 3.00000000000000000, 7.93725393319377177,
		 10.2469507659595984, 7.93725393319377177, 3.00000000000000000,
		 1.00000000000000000, 3.00000000000000000, 4.58257569495584001,
		 4.58257569495584001, 3.00000000000000000, 1.00000000000000000,
		 // i{6, 0, 0}, {5, 1, 0}, {5, 0, 1}, {4, 2, 0}, {4, 1, 1}, {4, 0, 2}, {3, 3, 0},
     //{3, 2, 1}, {3, 1, 2}, {3, 0, 3}, {2, 4, 0}, {2, 3, 1}, {2, 2, 2}, {2, 1, 3},
     //{2, 0, 4}, {1, 5, 0}, {1, 4, 1}, {1, 3, 2}, {1, 2, 3}, {1, 1, 4}, {1, 0, 5},
     //{0, 6, 0}, {0, 5, 1}, {0, 4, 2}, {0, 3, 3}, {0, 2, 4}, {0, 1, 5}, {0, 0, 6}
		 1.00000000000000000, 3.31662479035539985, 3.31662479035539985,
		 5.74456264653802866, 9.94987437106619955, 5.74456264653802866,
		 6.79705818718657138, 15.1986841535706636, 15.1986841535706636,
		 6.79705818718657138, 5.74456264653802866, 15.1986841535706636,
		 19.6214168703485835, 15.1986841535706636, 5.74456264653802866,
		 3.31662479035539985, 9.94987437106619955, 15.1986841535706636,
		 15.1986841535706636, 9.94987437106619955, 3.31662479035539985,
		 1.00000000000000000, 3.31662479035539985, 5.74456264653802866,
		 6.79705818718657138, 5.74456264653802866, 3.31662479035539985,
		 1.00000000000000000
     // j shells next ????
    };


==#

